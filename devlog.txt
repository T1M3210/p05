jasonC -- 2025-05-02 11:32
 - Created files and directories for project.
timN -- 2025-05-05 11:20
 - uploaded flag.jpg and edited README.md
adityaA, jasonC, timN, stellaY -- 2025-05-08 11:47
 - updated readme by changing database to mongo and changing some descriptions
adityaA -- 2025-05-08 11:47
 - created py file and added description
timN -- 2025-05-09 6:00
 - updated requirements.txt, added login/signup functionality, navbar
stellaY -- 2025-05-09 9:45
 - add db methods
stellaY -- 2025-05-09 11:45
 -add rule directory
jasonC -- 2025-05-13 11:47
 - updated base.html and improved navbar
 - fixed problems with register connection
 - developed a way to insert rules in password game
jasonC -- 2025-05-13 1:50
 - correctly named mongo key file
 - changes to game page
stellaY -- 2025-05-14 10:54
 - Added rule class and rules.js, wrote a rule
timN -- 2025-05-14 11:33
 - Fixed db errors, linked it, fixed sign up
jasonC -- 2025-05-14 11:47
 - added structure for rules
 - added css styling
jasonC -- 2025-05-14 1:55
 - added input textbox in password game
 - CSS formatting
jasonC -- 2025-05-15 11:45
 - changed textbox using JS to make it expand vertically
 - added styling to navbar elements
jasonC -- 2025-05-16 11:47
 - fixed submit password button
 - updated navbar
stellaY -- 2025-05-16 11:47
 - Worked on adding rules
adityaA, timN -- 2025-05-16 11:47
 - worked on debugging internal server error
stellaY -- 2025-05-19 02:33
 - Attempted to get rules to render on page
 - Finished more rules
adityaA -- 2025-05-19 11:47
 - color trap game
 - fake captcha
jasonC -- 2025-05-19 22:50
 - successfully linked password submission with Flask routing
adityaA, stellaY -- 2025-05-20 11:47
 - worked on password game
jasonC -- 2025-05-20 20:51
 - fully integrated database helper functions in __init__
 - changes to frontend
stellaY -- 2025-05-22 11:47
 - Get rules to render and change color
timN -- 2025-05-22 23:03
Application of Python Style
 - 4-space indentation and blank lines between function definitions
 - Function naming in snake_case (ex: add_user, check_user, verify_user)
 - Limited line length and avoiding compound statements for readability
Most Useful:
 - Consistent indentation and clean function seperation, as mentioned in Indentation, Blank Lines
 - Helped to quickly understand each route's behavior in our app during testing and debugging
 - Ex: Line 31 of db.py: def verify_user(username, password):
Application of JS Style
 - 2-space indentation throughout event handlers and DOM manipulation code
 - camelCase naming (ex: escapeCount, showCaptcha, etc.)
 - Proper bracket placement and whitespace around operators
Most Useful:
 - Consistent function structure and indentation helped reduce merge conflicts (!!!)
 - ^^ is huge as we all work on JS for this project
 - Made very readable through the structuring as well as vertical spacing
 - Ex: Line 42 of story.js: function showCaptcha() {
 - ^^ function clearly named, scoped, and proper whitespace and indentation standards
stellaY -- 2025-05-23 11:15
 - Fix conflicts and push
jasonC -- 2025-05-23 11:37
 - Connected frontend to JS rules in the game
 - Removed extra "rules.js" file
timN, adityaA -- 2025-05-23 11:47
 - Continued debugging an issue
adityaA -- 2025-05-27 11:47
 - Made password rules appear one at a time
jasonC -- 2025-05-29 11:19
 - Fixed flash rendering and file errors
adityaA -- 2025-05-29 11:47
 - Explored other groups' projects and left feedback
 - Helped Tim in debugging
timN, jasonC, adityaA, stellaY -- 2025-06-02 11:47
 - switched from mongo to sqlite
stellaY -- 2025-06-03 11:46
 - fix buggy sqlite
adityaA -- 2025-06-03 11:47
 - worked on end.html
